services:
  mongo:
    image: mongo:latest
    container_name: qtsbook-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:1.0.2
    container_name: qtsbook-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      mongo:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qtsbook-app
    environment:
      QTS_MONGODB_URI: mongodb://mongo:27017
      QTS_MONGODB_DB: qtsbook
      QTS_LOG_LEVEL: INFO
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      mongo:
        condition: service_healthy
    command: bash -lc "echo 'qtsbook app container ready' && sleep infinity"

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qtsbook-scheduler
    environment:
      QTS_MONGODB_URI: mongodb://mongo:27017
      QTS_MONGODB_DB: qtsbook
      QTS_TIMEZONE: Asia/Dhaka
      QTS_LOG_LEVEL: INFO
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      mongo:
        condition: service_healthy
    command: bash -lc "python -m scripts.schedule_daily"


volumes:
  mongo_data:
